FINIT 	FPU 초기화
FXSAVE 	FPU 컨택스트 저장
FXLOAD	FPU 컨택스트 로드

FXSAVE|FXLOAD [mem] 이런식으로 사용하고 이때 메모리 어드레스는 반드시 16바이트 단위로 정렬되어 있어야 한다.

FPU CONTEXT의 크기는 512바이트

 CR0 Flags
EM 	MP* TS	Action
0 	1 	0 	Execute.
0 	1 	1 	#NM exception.
1 	1	0 	#UD exception.
1 	1 	1 	#UD exception. 

EM비트가 설정되어있다는 것은 소프트웨어적으로 실수연산을 수행한다는 뜻. 비트가 설정된 상태로 실수 연산을 하면, #UD exception을 발생한다.
MP(monitor coprocessor)실수 연산 중 예외를 확인하는 wait 또는 fwait를 사용했을때, TS비트가 설정되어있다면 예외를 발생하도록 하는 비트이다.
TS(Task Switch)FPU Context switch를 최대한 미루는 핵심적인 역할. 1로 설정되었다면, 새로운 태스크로 설정되었다는 뜻이다.

   <EM = 1> 
FPU operation --#UD exception-->	1. previous task에 FPU Context save
									2. current	task에 FPU Context load
									3. set EM = 0
									
#UD Handling	if(FPU used ever?)
				Yes: previous task에 FPU Context save, That Task FPU used.
				No:nop
				if(This Task FPU used?)
				NO: FPU init	Yes:current	task에 FPU Context load
				Last Used Task= This TASK.

#NM Handling	if(is Last Used Task?)
				Yes: FPU Context Save
				NO: 